{"version":3,"sources":["webpack:///./src/pages/ThreadEdit.vue","webpack:///./src/pages/ThreadEdit.vue?670f","webpack:///./src/mixins/asyncDataStatus.js","webpack:///./src/components/ThreadEditor.vue","webpack:///./src/components/ThreadEditor.vue?0909"],"names":["class","asyncDataStatus_ready","thread","title","text","save","cancel","formIsDirty","components","ThreadEditor","mixins","asyncDataStatus","props","id","type","String","required","data","computed","this","$store","state","threads","items","post","posts","methods","updateThread","$router","push","name","params","created","fetchThread","fetchPost","asyncDataStatus_fetched","beforeRouteLeave","confirmed","window","confirm","render","$emit","label","form","rules","as","rows","cols","existing","default","watch","handler","deep"],"mappings":"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","file":"js/ThreadEdit.85f40707.js","sourcesContent":["<template>\n  <div v-if=\"asyncDataStatus_ready\" class=\"col-full push-top\">\n    <h1>\n      Editing <i>{{ thread.title }}</i>\n    </h1>\n\n    <ThreadEditor\n      :title=\"thread.title\"\n      :text=\"text\"\n      @save=\"save\"\n      @cancel=\"cancel\"\n      @dirty=\"formIsDirty = true\" @clean=\"formIsDirty = false\"\n    />\n  </div>\n</template>\n<script>\nimport ThreadEditor from '@/components/ThreadEditor'\nimport { findById } from '@/helpers'\nimport { mapActions } from 'vuex'\nimport asyncDataStatus from '@/mixins/asyncDataStatus'\nexport default {\n  components: { ThreadEditor },\n  mixins: [asyncDataStatus],\n  props: {\n    id: { type: String, required: true }\n  },\n  data () {\n    return {\n      formIsDirty: false\n    }\n  },\n  computed: {\n    thread () {\n      return findById(this.$store.state.threads.items, this.id)\n    },\n    text () {\n      const post = findById(this.$store.state.posts.items, this.thread.posts[0])\n      return post ? post.text : ''\n    }\n  },\n  methods: {\n    ...mapActions('threads', ['fetchThread', 'updateThread']),\n    ...mapActions('posts', ['fetchPost']),\n    async save ({ title, text }) {\n      const thread = await this.updateThread({\n        id: this.id,\n        title,\n        text\n      })\n      this.$router.push({ name: 'ThreadShow', params: { id: thread.id } })\n    },\n    cancel () {\n      this.$router.push({ name: 'ThreadShow', params: { id: this.id } })\n    }\n  },\n  async created () {\n    const thread = await this.fetchThread({ id: this.id })\n    await this.fetchPost({ id: thread.posts[0] })\n    this.asyncDataStatus_fetched()\n  },\n  beforeRouteLeave () {\n    if (this.formIsDirty) {\n      const confirmed = window.confirm('Are you sure you want to leave? Unsaved changes will be lost!')\n      if (!confirmed) return false\n    }\n  }\n}\n</script>\n","import { render } from \"./ThreadEdit.vue?vue&type=template&id=cb0215c4\"\nimport script from \"./ThreadEdit.vue?vue&type=script&lang=js\"\nexport * from \"./ThreadEdit.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","export default {\n  data () {\n    return {\n      asyncDataStatus_ready: false\n    }\n  },\n  methods: {\n    asyncDataStatus_fetched () {\n      this.asyncDataStatus_ready = true\n      this.$emit('ready')\n    }\n  }\n}\n","<template>\n  <VeeForm @submit=\"save\">\n    <AppFormField label=\"Title\" name=\"title\" v-model=\"form.title\" rules=\"required\" />\n    <AppFormField as=\"textarea\" label=\"Content\" name=\"text\" v-model=\"form.text\" rules=\"required\" rows=\"8\" cols=\"140\" />\n\n    <div class=\"btn-group\">\n      <button @click.prevent=\"$emit('cancel')\" class=\"btn btn-ghost\">Cancel</button>\n      <button class=\"btn btn-blue\" type=\"submit\" name=\"Publish\">\n        {{existing ? 'Update' : 'Publish'}}\n      </button>\n    </div>\n  </VeeForm>\n</template>\n\n<script>\nexport default {\n  props: {\n    title: { type: String, default: '' },\n    text: { type: String, default: '' }\n  },\n  data () {\n    return {\n      form: {\n        title: this.title,\n        text: this.text\n      }\n    }\n  },\n  computed: {\n    existing () {\n      return !!this.title\n    }\n  },\n  methods: {\n    save () {\n      this.$emit('clean')\n      this.$emit('save', { ...this.form })\n    }\n  },\n  watch: {\n    form: {\n      handler () {\n        if (this.form.title !== this.title || this.form.text !== this.text) {\n          this.$emit('dirty')\n        } else {\n          this.$emit('clean')\n        }\n      },\n      deep: true\n    }\n  }\n}\n</script>\n","import { render } from \"./ThreadEditor.vue?vue&type=template&id=0103a24e\"\nimport script from \"./ThreadEditor.vue?vue&type=script&lang=js\"\nexport * from \"./ThreadEditor.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script"],"sourceRoot":""}